@using BabyInABagServer.Models
@model Order

@{
    ViewBag.Title = "Edit";
}


@{
    ViewBag.Title = "Orders";
}

@{
    Layout = null;
}

    <!DOCTYPE html>
    <html lang="en">

    <head>
        <meta charset="UTF-8">
        <title>Administration</title>
        <link rel="stylesheet" href="~/Styles/style.css">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
        <link href='https://fonts.googleapis.com/css?family=Oswald' rel='stylesheet'>
        <style>
            table {
                font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
                border-collapse: collapse;
                width: 100%;
            }

            td, th {
                border: 1px solid #ddd;
                padding: 8px;
            }

            tr:nth-child(even) {
                background-color: #f2f2f2;
            }

            th {
                padding-top: 12px;
                padding-bottom: 12px;
                text-align: left;
                background-color: #7CB342;
                color: white;
            }
        </style>
    </head>


    <body class="admin-body">
        <!-- Header -->
        <div class="admin-top" style="background-color:gray;">
            <div class="w3-bar w3-white w3-wide w3-padding w3-card" style="min-width: 640px;">
                <h1 class="w3-bar-item" id="header-text">Baby In A Bag Management</h1>
                <div id="navbar" style="width:100%; min-width: 752px; position:absolute; bottom:0;" align="center"></div>
                <div id="topright">
                    <div class="w3-right w3-hide-small">
                        <div class="dropdown">
                            <button class="w3-bar-item w3-button">Administrator</button>
                            <div class="dropdown-content">
                                <a>@Html.ActionLink("Sign Out", "Index", "Home", null, new { style = "text-decoration:none;" })</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Side Navigation Bar -->
        <div class="sidenav">
            <a>@Html.ActionLink("Orders", "Orders", "Admin", null, new { style = "text-decoration:none;" })</a>
            <a>@Html.ActionLink("Reports", "Reports", "Admin", null, new { style = "text-decoration:none;" })</a>
            <a></a>
            <button href="#" class="dropdown-btn">
                Products
                <i class="fa fa-caret-down"></i>
            </button>
            <div class="dropdown-container">
                <a>@Html.ActionLink("Add Product", "AddProduct", "Admin", null, new { style = "text-decoration:none;" })</a>
                <a>@Html.ActionLink("Manage Products", "ManageProducts", "Admin", null, new { style = "text-decoration:none;" })</a>
            </div>
            <a>@Html.ActionLink("Accounts", "Accounts", "Admin", null, new { style = "text-decoration:none;" })</a>
        </div>

        <!-- Contents -->
        <div class="main-contents">
            <!-- Panel -->
            <div class="main">
                @using (Html.BeginForm("Edit", "Orders", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Order_Id)
                    @Html.HiddenFor(model => model.Order_Date_Placed)
                    @Html.HiddenFor(model => model.Order_Details)
                    @Html.HiddenFor(model => model.Order_Date_Paid)
                    @Html.HiddenFor(model => model.Shipping_Address)
                    @Html.HiddenFor(model => model.Invoice_Status)
                    @Html.HiddenFor(model => model.Customer_Id)
                    @Html.HiddenFor(model => model.Customer.Customer_Id)
                    <font size="4">
                        <h2 id="admin-header-text">MANAGE ORDER</h2>
                        <hr>
                        <!-- Table Content Order ID and Account Information-->
                        <div>
                            <table style="margin-bottom:10px">
                                <tr>
                                    <th>Order ID #@Html.DisplayFor(model => model.Order_Id)</th>
                                    <th>Account Information</th>
                                </tr>
                                <tr>
                                    <td><p style="margin: 0px;">Order Date: @Html.DisplayFor(model => model.Order_Date_Placed) </p></td>
                                    <td>
                                        @{
                                            var fullName = Model.Customer.First_Name + " " + Model.Customer.Last_Name;
                                            <p style="margin: 0px;">Customer Name: @Html.DisplayFor(model => fullName)</p>
                                        }
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        Order Status:
                                        @Html.DropDownListFor(model => model.Order_Status, new SelectList(Enum.GetValues(typeof(Order_Status))))
                                    </td>
                                    <td><p style="margin:0px;">Email: @Html.DisplayFor(model => model.Customer.Customer_Email)</p></td>
                                </tr>
                            </table>
                        </div>
                        <!-- Table 2 Content Shipping Address and Invoice-->
                        <div>
                            <table style="margin-bottom:10px">
                                <tr>
                                    <th>Shipping Address</th>
                                    <th>Invoice</th>
                                </tr>
                                <tr>
                                    <td><p style="margin: 0px;">@Html.DisplayFor(model => model.Shipping_Address)</p></td>
                                    <td><p style="margin: 0px;">@Html.DisplayFor(model => model.Invoice_Status)</p></td>
                                </tr>
                            </table>
                        </div>
                        <!-- Table 3 Content Items -->
                        <div>
                            <table>
                                <tr>
                                    <th>Items</th>
                                    <th>Size</th>
                                    <th>Price</th>
                                    <th>Qty</th>
                                    <th>Tax</th>
                                    <th>Raw Total</th>
                                </tr>
                                @foreach (var item in Model.Products)
                                {
                                    <tr>
                                        <td><p style="margin: 0px;">@Html.DisplayFor(modelItem => item.Product_Name)</p></td>
                                        <td>@Html.DisplayFor(modelItem => item.Size)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Product_Price)</td>
                                        <td>1</td>
                                        <td>$0.00</td>
                                        <td>@Html.DisplayFor(modelItem => item.Product_Price)</td>
                                    </tr>
                                }
                            </table>
                        </div>
                        <input type="submit" value="Update" class="btn btn-default" />
                        @*<button type="button" onclick="alert('Order Successfully Updated')">Update</button>*@
                    </font>
                }
            </div>
            <!-- End of Panel -->
        </div>
        <!-- End of Contents -->

        <script>
            /* Loop through all dropdown buttons to toggle between hiding and showing its dropdown content - This allows the user to have multiple dropdowns without any conflict */
            var dropdown = document.getElementsByClassName("dropdown-btn");
            var i;

            for (i = 0; i < dropdown.length; i++) {
                dropdown[i].addEventListener("click", function () {
                    this.classList.toggle("active");
                    var dropdownContent = this.nextElementSibling;
                    if (dropdownContent.style.display === "block") {
                        dropdownContent.style.display = "none";
                    } else {
                        dropdownContent.style.display = "block";
                    }
                });
            }
        </script>

    </body>

</html>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@*<h2>Edit</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Order</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Order_Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Order_Date_Placed, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Order_Date_Placed, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Order_Date_Placed, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Order_Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Order_Status, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Order_Status, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Order_Details, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Order_Details, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Order_Details, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Order_Date_Paid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Order_Date_Paid, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Order_Date_Paid, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CustomerId, "CustomerId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CustomerId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
